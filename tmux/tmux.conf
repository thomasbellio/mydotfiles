set -g default-terminal "screen-256color"
set-option -g history-limit 10000
# set -g prefix C-a
# unbind C-b
bind-key C-a send-prefix

# bind key to synchronize panes
bind-key s setw synchronize-panes

# Shift arrow to switch windows
# bind -n S-Left  previous-window
# bind -n S-Right next-window
# bind -n 'M-H'  previous-window
# bind -n 'Mi-L' next-window
# bind -n 'M-S-Left'  previous-window
# bind -n 'M-S-Right' next-window
# unbind %
# bind | split-window -h
# unbind '"'
# bind - split-window -v
# unbind r
# bind r source-file ~/.tmux.conf
bind -r j resize-pane -D 5
bind -r k resize-pane -U 5
bind -r l resize-pane -R 5
bind -r h resize-pane -L 5
bind -r m resize-pane -Z

set -g mouse on
set-window-option -g mode-keys vi
# Set default clipboard command, overridden by specific OS settings below
set-option -g @clipboard-cmd 'echo "No suitable clipboard utility found"'

# Configure for macOS using pbcopy
if-shell "[[ $(uname) == 'Darwin' ]]" \
    "set-option -g @clipboard-cmd 'pbcopy'"

# Configure for Linux using xclip or xsel
if-shell "[[ $(uname) != 'Darwin' ]] && command -v xclip > /dev/null 2>&1" \
    "set-option -g @clipboard-cmd 'xclip -in -selection clipboard'"
if-shell "[[ $(uname) != 'Darwin' ]] && command -v xclip > /dev/null 2>&1 && ! command -v xsel > /dev/null 2>&1" \
    "set-option -g @clipboard-cmd 'xsel --clipboard --input'"

# Bind y to use the detected clipboard command
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "#{@clipboard-cmd}"
bind-key -T copy-mode-vi 'v' send -X begin-selection # start selecting text with "v"
bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel 'xclip -in -selection clipboard' # copy text with "y"
unbind -T copy-mode-vi MouseDragEnd1Pane # don't exit copy mode when dragging with mouse
# remove delay for exiting insert mode with ESC in Neovim
# set -sg escape-time 10
# tpm plugin
set -g @plugin 'tmux-plugins/tpm'
set -g display-panes-time 2000
# list of tmux plugins
# set -g @plugin 'jimeh/tmux-themepack'
# set -g @plugin 'tmux-plugins/tmux-resurrect' # persist tmux sessions after computer restart
# set -g @plugin 'tmux-plugins/tmux-continuum' # automatically saves sessions for you every 15 minutes
# set -g @themepack 'powerline/block/purple'
# set -g @plugin 'christoomey/vim-tmux-navigator'
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'M-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'M-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'M-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'M-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# bind-key -n 'M-H' if-shell "$is_vim" 'send-keys gt'  'previous-window'
# bind-key -n 'M-L' if-shell "$is_vim" 'send-keys gT'  'next-window'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
#    "bind-key -n 'M-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"
# bind-key -T copy-mode-vi 'M-h' select-pane -L
# bind-key -T copy-mode-vi 'M-j' select-pane -D
# bind-key -T copy-mode-vi 'M-k' select-pane -U
# bind-key -T copy-mode-vi 'M-l' select-pane -R
# bind-key -T copy-mode-vi 'M-\' select-pane -l
source-file ${HOME}/.tmux-themepack/powerline/block/purple.tmuxtheme
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
