# Define the Docker container name
export CONTAINER_NAME="$(basename $PWD)"

# Check if container exists and is running
if ! docker ps -q -f name=$CONTAINER_NAME | grep -q .; then
  # If not running but exists, start it
  if docker ps -a -q -f name=$CONTAINER_NAME | grep -q .; then
    echo "Starting existing container: $CONTAINER_NAME"
    docker start $CONTAINER_NAME
  else
    # If it doesn't exist, build and start it
    echo "Creating new container: $CONTAINER_NAME"
    # docker build -t ${CONTAINER_NAME}-image \
    #   --build-arg USER_UID=$(id -u) \
    #   --build-arg USER_GID=$(id -g) .
    docker run -d --name $CONTAINER_NAME \
      --hostname $CONTAINER_NAME \
      -v ${SSH_AUTH_SOCK}:/ssh-agent -e SSH_AUTH_SOCK=/ssh-agent \
      -v ${HOME}/.ssh/known_hosts:/root/.ssh/known_hosts \
      thomasbell/dev-images:debian-php-8.3.11 sleep infinity
#      ${CONTAINER_NAME}-image
  fi
fi

# Function to run commands in the container
docker_exec() {
  docker exec  -it $CONTAINER_NAME "$@"
}

# Export custom commands
export -f docker_exec

# Alias common tools to run inside the container
alias container="docker_exec bash"

# Print status message
echo "Docker development environment activated"
echo "Run commands inside the container using: docker_exec <command>"

